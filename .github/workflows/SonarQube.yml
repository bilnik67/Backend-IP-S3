name: Build

on:
  push:
    branches:
      - main


jobs:
  sonarqube-backend:
    name: SonarQube Backend
    runs-on: windows-latest
    permissions: read-all
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        working-directory: ./Backend/TeamVas
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: dotnet tool install --global dotnet-sonarscanner --version 5.14.0
      - name: Build and analyze
        working-directory: ./Backend/TeamVas
        shell: powershell
        run: |
          dotnet sonarscanner begin /k:"Teamvas_backend" /d:sonar.token="${{ secrets.SONAR_TOKEN_BACKEND }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
          dotnet build
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN_BACKEND }}"


  sonarqube-frontend:
    name: SonarQube Frontend
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONTEND }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
